My Mystic Arcana React app on Replit Core is broken—I need it live by 8:00 PM CST today (March 5, 2025). It’s a frontend-only MVP with tarot (random card draw) and astrology (sun sign calculator) features. I’m stuck with port 3000 conflicts (e.g., "Something is already running on port 3000. Probably: /nix/store/.../node /home/runner/workspace/node_modules/react-scripts/scripts/start.js (pid 2481)"), a 404, and a blank network page at https://your-repl.repl.co. I’ve got these files: src/App.js, src/components/Navbar.js, src/index.js, src/index.css, src/pages/TarotReading.js, src/pages/AstrologyChart.js, public/index.html, and package.json (using react-scripts@5.0.1). app.py.bak is disabled—ignore it.

Fix this:
1. Kill all Node processes (e.g., kill -9 2481, killall node, lsof -i :3000 to find PIDs).
2. Update .replit to run PORT=3000 npm start with language="nodejs", modules=["nodejs-20"], and port 3000 mapped.
3. Ensure all files are correct (see below) and exist in the right directories.
4. Start npm start and make the app live at https://your-repl.repl.co by 8:00 PM CST.
5. Ignore 12 npm vulnerabilities—don’t downgrade react-scripts.

Files should be:
- .replit (see above config)
- public/index.html:
  <!DOCTYPE html>
  <html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mystic Arcana | Astrology, Tarot & Spiritual Wellness</title>
    <meta name="description" content="Explore the mystical arts with Mystic Arcana - Your daily source for astrology insights, tarot readings, spiritual wellness, and occult wisdom.">
    <link rel="icon" href="/favicon.ico" />
  </head>
  <body>
    <div id="root"></div>
  </body>
  </html>
- src/App.js:
  import React, { useState, useEffect } from 'react';
  import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
  import Navbar from './components/Navbar';
  import TarotReading from './pages/TarotReading';
  import AstrologyChart from './pages/AstrologyChart';

  function App() {
    const [user, setUser] = useState(null);

    useEffect(() => {
      setUser({ id: 1, username: "testuser" });
    }, []);

    return (
      <Router>
        <div className="min-h-screen bg-gradient-to-b from-gray-900 to-indigo-900 text-white">
          <Navbar user={user} setUser={setUser} />
          <div className="container mx-auto p-4 relative z-10 flex-grow">
            <Routes>
              <Route path="/" element={<h1 className="text-3xl text-center">Welcome to Mystic Arcana</h1>} />
              <Route path="/readings" element={<TarotReading />} />
              <Route path="/astrology" element={<AstrologyChart />} />
            </Routes>
          </div>
        </div>
      </Router>
    );
  }

  export default App;
- src/components/Navbar.js:
  import React from 'react';
  import { Link } from 'react-router-dom';

  function Navbar({ user }) {
    return (
      <nav className="p-4 bg-gray-800">
        <div className="container mx-auto flex justify-between">
          <Link to="/" className="text-2xl font-bold text-purple-300">Mystic Arcana</Link>
          <div className="space-x-4">
            <Link to="/readings" className="hover:text-purple-300">Tarot</Link>
            <Link to="/astrology" className="hover:text-purple-300">Astrology</Link>
            {user ? <span>{user.username}</span> : <Link to="/login">Login</Link>}
          </div>
        </div>
      </nav>
    );
  }

  export default Navbar;
- src/index.js:
  import React from 'react';
  import ReactDOM from 'react-dom/client';
  import './index.css';
  import App from './App';

  const root = ReactDOM.createRoot(document.getElementById('root'));
  root.render(
    <React.StrictMode>
      <App />
    </React.StrictMode>
  );
- src/index.css:
  @tailwind base;
  @tailwind components;
  @tailwind utilities;

  /* Commented out until stars.png and twinkling.png are added to static/ */
  /* .stars {
    background-image: url('../static/stars.png');
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 0;
  } */
  /* .twinkling {
    background-image: url('../static/twinkling.png');
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
  } */
- src/pages/TarotReading.js:
  import { useState } from 'react';

  const cards = [
    { name: "The Fool", meaning: "New beginnings, adventure." },
    { name: "The Magician", meaning: "Skill, manifestation." },
    { name: "The Tower", meaning: "Sudden change, upheaval." },
  ];

  function TarotReading() {
    const [card, setCard] = useState(null);

    const drawCard = () => {
      const randomCard = cards[Math.floor(Math.random() * cards.length)];
      setCard(randomCard);
    };

    return (
      <div className="text-center">
        <h1 className="text-3xl mb-4">Tarot Reading</h1>
        <button
          onClick={drawCard}
          className="bg-purple-600 hover:bg-purple-700 text-white py-2 px-4 rounded"
        >
          Draw a Card
        </button>
        {card && (
          <div className="mt-4 p-4 bg-gray-800 rounded max-w-md mx-auto">
            <h2 className="text-2xl">{card.name}</h2>
            <p>{card.meaning}</p>
          </div>
        )}
      </div>
    );
  }

  export default TarotReading;
- src/pages/AstrologyChart.js:
  import { useState } from 'react';

  const getSunSign = (date) => {
    const month = date.getMonth() + 1;
    const day = date.getDate();
    if ((month === 3 && day >= 21) || (month === 4 && day <= 19)) return "Aries";
    if ((month === 4 && day >= 20) || (month === 5 && day <= 20)) return "Taurus";
    if ((month === 5 && day >= 21) || (month === 6 && day <= 20)) return "Gemini";
    if ((month === 6 && day >= 21) || (month === 7 && day <= 22)) return "Cancer";
    if ((month === 7 && day >= 23) || (month === 8 && day <= 22)) return "Leo";
    if ((month === 8 && day >= 23) || (month === 9 && day <= 22)) return "Virgo";
    if ((month === 9 && day >= 23) || (month === 10 && day <= 22)) return "Libra";
    if ((month === 10 && day >= 23) || (month === 11 && day <= 21)) return "Scorpio";
    if ((month === 11 && day >= 22) || (month === 12 && day <= 21)) return "Sagittarius";
    if ((month === 12 && day >= 22) || (month === 1 && day <= 19)) return "Capricorn";
    if ((month === 1 && day >= 20) || (month === 2 && day <= 18)) return "Aquarius";
    if ((month === 2 && day >= 19) || (month === 3 && day <= 20)) return "Pisces";
    return "Unknown";
  };

  function AstrologyChart() {
    const [birthDate, setBirthDate] = useState('');
    const [sign, setSign] = useState(null);

    const handleSubmit = (e) => {
      e.preventDefault();
      const date = new Date(birthDate);
      const sunSign = getSunSign(date);
      setSign(sunSign);
    };

    return (
      <div className="text-center">
        <h1 className="text-3xl mb-4">Astrology Chart</h1>
        <form onSubmit={handleSubmit} className="mb-4">
          <label htmlFor="birthDate" className="sr-only">Birth Date</label>
          <input
            id="birthDate"
            type="date"
            value={birthDate}
            onChange={(e) => setBirthDate(e.target.value)}
            className="p-2 bg-gray-800 border border-gray-700 rounded text-white"
          />
          <button
            type="submit"
            className="ml-2 bg-purple-600 hover:bg-purple-700 text-white py-2 px-4 rounded"
          >
            Get Sign
          </button>
        </form>
        {sign && (
          <div className="p-4 bg-gray-800 rounded max-w-md mx-auto">
            <h2 className="text-2xl">Your Sun Sign: {sign}</h2>
          </div>
        )}
      </div>
    );
  }

  export default AstrologyChart;
- package.json:
  {
    "name": "mystic-arcana",
    "version": "1.0.0",
    "private": true,
    "main": "src/index.js",
    "scripts": {
      "start": "react-scripts start",
      "build": "react-scripts build",
      "test": "react-scripts test",
      "eject": "react-scripts eject"
    },
    "dependencies": {
      "@heroicons/react": "^2.2.0",
      "@replit/object-storage": "^1.0.0",
      "axios": "^1.8.1",
      "react": "^19.0.0",
      "react-dom": "^19.0.0",
      "react-router-dom": "^6.30.0",
      "react-scripts": "5.0.1"
    },
    "devDependencies": {
      "tailwindcss": "^3.3.3",
      "postcss": "^8.4.31",
      "autoprefixer": "^10.4.16"
    },
    "browserslist": {
      "production": [
        ">0.2%",
        "not dead",
        "not op_mini all"
      ],
      "development": [
        "last 1 chrome version",
        "last 1 firefox version",
        "last 1 safari version"
      ]
    },
    "description": "Mystic Arcana - Astrology, Tarot & Spiritual Wellness",
    "author": "kjfsoul",
    "license": "MIT"
  }

If issues persist, notify me with your Repl URL and errors by 7:30 PM CST.